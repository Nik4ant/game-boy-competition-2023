import subprocessfrom typing import Listfrom os import pathimport osGBDK_BIN_PATH = "D:\\gbdk\\bin"LCC = path.join(path.abspath(GBDK_BIN_PATH), "lcc")PROJECT_FOLDER = "..\\game-src"OUTPUT_FOLDER = "..\\game-builds"OUTPUT_FILENAME = "main.gbc"def get_all_c_files(search_folder: str) -> List[str]:    result = []    was_entry_point_found: bool = False    for root, _, files in os.walk(search_folder):        for file in files:            filename = file.split('.')            if filename[-1] == 'c':                result.append(path.join(root, file))                if filename[0] == "main":                    was_entry_point_found = True    assert was_entry_point_found, "There MUST be a main.c file (an entry point)"    return resultdef clear_output_dir():    deleted_count: int = 0    for root, _, files in os.walk(OUTPUT_FOLDER):        for file in files:            os.remove(path.join(root, file))            deleted_count += 1    print(f"Deleted {deleted_count} files in the output dir")def main():    clear_output_dir()    # Compile and link all C files    c_files = get_all_c_files(PROJECT_FOLDER)    output_file = path.join(OUTPUT_FOLDER, OUTPUT_FILENAME)    command = f"{LCC} -o {output_file} {' '.join(c_files)}"    # print(command)    print(f"Build exited with: {subprocess.call(command, shell=True)}")    return 0if __name__ == "__main__":    main()